{"version":3,"sources":["../node_modules/reselect/es/index.js","redux/users-selectors.js","components/Users/Users-container.js"],"names":["defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","i","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","push","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getUsersWithPhoto","state","usersPage","users","filter","user","photos","small","getUsersTotalCount","followed","usersTotalCount","UsersContainer","props","getUsersWithTerm","match","term","setState","getUsers","currentPage","pageSize","this","setCurrentPage","prevProps","Users","onPageChanged","follow","unfollow","isFetching","showMoreUsers","followingUsers","paginationButtonsCount","React","Component","mapDispatchToProps","setTerm","compose","connect","withRouter"],"mappings":"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","file":"static/js/3.7d458fe3.chunk.js","sourcesContent":["function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from \"reselect\"\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsersWithPhoto = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(user => !!user.photos.small);\r\n});\r\nexport const getFriends = createSelector(getUsersWithPhoto, (users) => {\r\n    return users.filter(user => !!user.followed);\r\n});\r\nexport const getUsersTotalCount = (state) => {\r\n    return state.usersPage.usersTotalCount\r\n}","import { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport React from 'react';\r\nimport { follow, unfollow, getUsers, showMoreUsers, onPageChanged, setTerm, setCurrentPage } from './../../redux/users-reducer';\r\nimport { compose } from 'redux';\r\nimport { getUsersTotalCount, getUsersWithPhoto } from './../../redux/users-selectors';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass UsersContainer extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {term: this.props.term};\r\n    }\r\n    getUsersWithTerm = () => {\r\n        if (this.props.match.params.term) {\r\n        this.setState({term: this.props.match.params.term})\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize, this.props.match.params.term);\r\n        } else {\r\n            this.props.getUsers(this.props.currentPage, this.props.pageSize, this.props.term);\r\n        }\r\n    }\r\n    componentDidMount () {\r\n        this.props.setCurrentPage(1);\r\n        this.getUsersWithTerm();\r\n    }\r\n    componentDidUpdate (prevProps) {\r\n        if (prevProps.match.params.term !== this.props.match.params.term) {\r\n            this.getUsersWithTerm();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return <Users usersTotalCount={this.props.usersTotalCount}\r\n                        pageSize = {this.props.pageSize} \r\n                        currentPage = {this.props.currentPage}\r\n                        onPageChanged = {this.props.onPageChanged}\r\n                        users = {this.props.users}\r\n                        follow = {this.props.follow}\r\n                        unfollow = {this.props.unfollow}\r\n                        isFetching = {this.props.isFetching}\r\n                        showMoreUsers = {this.props.showMoreUsers}\r\n                        followingUsers= {this.props.followingUsers}\r\n                        paginationButtonsCount = {this.props.paginationButtonsCount}\r\n                        term = {this.state.term}/>\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersWithPhoto(state),\r\n        usersTotalCount : getUsersTotalCount(state),\r\n        paginationButtonsCount: state.usersPage.paginationButtonsCount,\r\n        currentPage : state.usersPage.currentPage,\r\n        pageSize : state.usersPage.pageSize,\r\n        term: state.usersPage.term,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingUsers: state.usersPage.followingUsers\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {follow, unfollow, showMoreUsers, getUsers, onPageChanged, setTerm, setCurrentPage}\r\n\r\nexport default compose(connect (mapStateToProps, mapDispatchToProps), withRouter)(UsersContainer);\r\n"],"sourceRoot":""}